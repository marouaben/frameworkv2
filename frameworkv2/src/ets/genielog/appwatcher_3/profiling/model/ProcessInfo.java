// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: processInfo.proto

package ets.genielog.appwatcher_3.profiling.model;

public final class ProcessInfo {
  private ProcessInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface processInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required uint32 uid = 2;
    /**
     * <code>required uint32 uid = 2;</code>
     *
     * <pre>
     ** process uid 
     * </pre>
     */
    boolean hasUid();
    /**
     * <code>required uint32 uid = 2;</code>
     *
     * <pre>
     ** process uid 
     * </pre>
     */
    int getUid();

    // required uint32 pid = 3;
    /**
     * <code>required uint32 pid = 3;</code>
     *
     * <pre>
     ** process pid 
     * </pre>
     */
    boolean hasPid();
    /**
     * <code>required uint32 pid = 3;</code>
     *
     * <pre>
     ** process pid 
     * </pre>
     */
    int getPid();

    // required float cpuUsage = 4;
    /**
     * <code>required float cpuUsage = 4;</code>
     *
     * <pre>
     ** CPU usage 
     * </pre>
     */
    boolean hasCpuUsage();
    /**
     * <code>required float cpuUsage = 4;</code>
     *
     * <pre>
     ** CPU usage 
     * </pre>
     */
    float getCpuUsage();

    // required uint64 cpuTime = 5;
    /**
     * <code>required uint64 cpuTime = 5;</code>
     *
     * <pre>
     ** CPU time 
     * </pre>
     */
    boolean hasCpuTime();
    /**
     * <code>required uint64 cpuTime = 5;</code>
     *
     * <pre>
     ** CPU time 
     * </pre>
     */
    long getCpuTime();

    // required uint32 priorityLevel = 6;
    /**
     * <code>required uint32 priorityLevel = 6;</code>
     *
     * <pre>
     ** priority from -20 to 20 
     * </pre>
     */
    boolean hasPriorityLevel();
    /**
     * <code>required uint32 priorityLevel = 6;</code>
     *
     * <pre>
     ** priority from -20 to 20 
     * </pre>
     */
    int getPriorityLevel();

    // required uint64 usedUserTime = 7;
    /**
     * <code>required uint64 usedUserTime = 7;</code>
     *
     * <pre>
     ** used user time (user mode) 
     * </pre>
     */
    boolean hasUsedUserTime();
    /**
     * <code>required uint64 usedUserTime = 7;</code>
     *
     * <pre>
     ** used user time (user mode) 
     * </pre>
     */
    long getUsedUserTime();

    // required uint64 usedSystemTime = 8;
    /**
     * <code>required uint64 usedSystemTime = 8;</code>
     *
     * <pre>
     ** used system time (kernel mode) 
     * </pre>
     */
    boolean hasUsedSystemTime();
    /**
     * <code>required uint64 usedSystemTime = 8;</code>
     *
     * <pre>
     ** used system time (kernel mode) 
     * </pre>
     */
    long getUsedSystemTime();

    // required uint64 rss = 9;
    /**
     * <code>required uint64 rss = 9;</code>
     *
     * <pre>
     **	 resident set size 
     * </pre>
     */
    boolean hasRss();
    /**
     * <code>required uint64 rss = 9;</code>
     *
     * <pre>
     **	 resident set size 
     * </pre>
     */
    long getRss();
  }
  /**
   * Protobuf type {@code Profiling.core.processInfo}
   */
  public static final class processInfo extends
      com.google.protobuf.GeneratedMessage
      implements processInfoOrBuilder {
    // Use processInfo.newBuilder() to construct.
    private processInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private processInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final processInfo defaultInstance;
    public static processInfo getDefaultInstance() {
      return defaultInstance;
    }

    public processInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private processInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
			// int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uid_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pid_ = input.readUInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              cpuUsage_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cpuTime_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              priorityLevel_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              usedUserTime_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              usedSystemTime_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rss_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.class, ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<processInfo> PARSER =
        new com.google.protobuf.AbstractParser<processInfo>() {
      public processInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new processInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<processInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     ** process name 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private int uid_;
    /**
     * <code>required uint32 uid = 2;</code>
     *
     * <pre>
     ** process uid 
     * </pre>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 uid = 2;</code>
     *
     * <pre>
     ** process uid 
     * </pre>
     */
    public int getUid() {
      return uid_;
    }

    // required uint32 pid = 3;
    public static final int PID_FIELD_NUMBER = 3;
    private int pid_;
    /**
     * <code>required uint32 pid = 3;</code>
     *
     * <pre>
     ** process pid 
     * </pre>
     */
    public boolean hasPid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 pid = 3;</code>
     *
     * <pre>
     ** process pid 
     * </pre>
     */
    public int getPid() {
      return pid_;
    }

    // required float cpuUsage = 4;
    public static final int CPUUSAGE_FIELD_NUMBER = 4;
    private float cpuUsage_;
    /**
     * <code>required float cpuUsage = 4;</code>
     *
     * <pre>
     ** CPU usage 
     * </pre>
     */
    public boolean hasCpuUsage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float cpuUsage = 4;</code>
     *
     * <pre>
     ** CPU usage 
     * </pre>
     */
    public float getCpuUsage() {
      return cpuUsage_;
    }

    // required uint64 cpuTime = 5;
    public static final int CPUTIME_FIELD_NUMBER = 5;
    private long cpuTime_;
    /**
     * <code>required uint64 cpuTime = 5;</code>
     *
     * <pre>
     ** CPU time 
     * </pre>
     */
    public boolean hasCpuTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint64 cpuTime = 5;</code>
     *
     * <pre>
     ** CPU time 
     * </pre>
     */
    public long getCpuTime() {
      return cpuTime_;
    }

    // required uint32 priorityLevel = 6;
    public static final int PRIORITYLEVEL_FIELD_NUMBER = 6;
    private int priorityLevel_;
    /**
     * <code>required uint32 priorityLevel = 6;</code>
     *
     * <pre>
     ** priority from -20 to 20 
     * </pre>
     */
    public boolean hasPriorityLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 priorityLevel = 6;</code>
     *
     * <pre>
     ** priority from -20 to 20 
     * </pre>
     */
    public int getPriorityLevel() {
      return priorityLevel_;
    }

    // required uint64 usedUserTime = 7;
    public static final int USEDUSERTIME_FIELD_NUMBER = 7;
    private long usedUserTime_;
    /**
     * <code>required uint64 usedUserTime = 7;</code>
     *
     * <pre>
     ** used user time (user mode) 
     * </pre>
     */
    public boolean hasUsedUserTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint64 usedUserTime = 7;</code>
     *
     * <pre>
     ** used user time (user mode) 
     * </pre>
     */
    public long getUsedUserTime() {
      return usedUserTime_;
    }

    // required uint64 usedSystemTime = 8;
    public static final int USEDSYSTEMTIME_FIELD_NUMBER = 8;
    private long usedSystemTime_;
    /**
     * <code>required uint64 usedSystemTime = 8;</code>
     *
     * <pre>
     ** used system time (kernel mode) 
     * </pre>
     */
    public boolean hasUsedSystemTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required uint64 usedSystemTime = 8;</code>
     *
     * <pre>
     ** used system time (kernel mode) 
     * </pre>
     */
    public long getUsedSystemTime() {
      return usedSystemTime_;
    }

    // required uint64 rss = 9;
    public static final int RSS_FIELD_NUMBER = 9;
    private long rss_;
    /**
     * <code>required uint64 rss = 9;</code>
     *
     * <pre>
     **	 resident set size 
     * </pre>
     */
    public boolean hasRss() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint64 rss = 9;</code>
     *
     * <pre>
     **	 resident set size 
     * </pre>
     */
    public long getRss() {
      return rss_;
    }

    private void initFields() {
      name_ = "";
      uid_ = 0;
      pid_ = 0;
      cpuUsage_ = 0F;
      cpuTime_ = 0L;
      priorityLevel_ = 0;
      usedUserTime_ = 0L;
      usedSystemTime_ = 0L;
      rss_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuUsage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPriorityLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUsedUserTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUsedSystemTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRss()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, uid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, pid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, cpuUsage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, cpuTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, priorityLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, usedUserTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, usedSystemTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, rss_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, uid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, pid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, cpuUsage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, cpuTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, priorityLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, usedUserTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, usedSystemTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, rss_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Profiling.core.processInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.class, ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.Builder.class);
      }

      // Construct using Profiling.core.ProcessInfo.processInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cpuUsage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        priorityLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        usedUserTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        usedSystemTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        rss_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor;
      }

      public ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo getDefaultInstanceForType() {
        return ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.getDefaultInstance();
      }

      public ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo build() {
        ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo buildPartial() {
        ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo result = new ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pid_ = pid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cpuUsage_ = cpuUsage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cpuTime_ = cpuTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.priorityLevel_ = priorityLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.usedUserTime_ = usedUserTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.usedSystemTime_ = usedSystemTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rss_ = rss_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo) {
          return mergeFrom((ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo other) {
        if (other == ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasCpuUsage()) {
          setCpuUsage(other.getCpuUsage());
        }
        if (other.hasCpuTime()) {
          setCpuTime(other.getCpuTime());
        }
        if (other.hasPriorityLevel()) {
          setPriorityLevel(other.getPriorityLevel());
        }
        if (other.hasUsedUserTime()) {
          setUsedUserTime(other.getUsedUserTime());
        }
        if (other.hasUsedSystemTime()) {
          setUsedSystemTime(other.getUsedSystemTime());
        }
        if (other.hasRss()) {
          setRss(other.getRss());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasUid()) {
          
          return false;
        }
        if (!hasPid()) {
          
          return false;
        }
        if (!hasCpuUsage()) {
          
          return false;
        }
        if (!hasCpuTime()) {
          
          return false;
        }
        if (!hasPriorityLevel()) {
          
          return false;
        }
        if (!hasUsedUserTime()) {
          
          return false;
        }
        if (!hasUsedSystemTime()) {
          
          return false;
        }
        if (!hasRss()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ets.genielog.appwatcher_3.profiling.model.ProcessInfo.processInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       ** process name 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required uint32 uid = 2;
      private int uid_ ;
      /**
       * <code>required uint32 uid = 2;</code>
       *
       * <pre>
       ** process uid 
       * </pre>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 uid = 2;</code>
       *
       * <pre>
       ** process uid 
       * </pre>
       */
      public int getUid() {
        return uid_;
      }
      /**
       * <code>required uint32 uid = 2;</code>
       *
       * <pre>
       ** process uid 
       * </pre>
       */
      public Builder setUid(int value) {
        bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 uid = 2;</code>
       *
       * <pre>
       ** process uid 
       * </pre>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = 0;
        onChanged();
        return this;
      }

      // required uint32 pid = 3;
      private int pid_ ;
      /**
       * <code>required uint32 pid = 3;</code>
       *
       * <pre>
       ** process pid 
       * </pre>
       */
      public boolean hasPid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 pid = 3;</code>
       *
       * <pre>
       ** process pid 
       * </pre>
       */
      public int getPid() {
        return pid_;
      }
      /**
       * <code>required uint32 pid = 3;</code>
       *
       * <pre>
       ** process pid 
       * </pre>
       */
      public Builder setPid(int value) {
        bitField0_ |= 0x00000004;
        pid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 pid = 3;</code>
       *
       * <pre>
       ** process pid 
       * </pre>
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pid_ = 0;
        onChanged();
        return this;
      }

      // required float cpuUsage = 4;
      private float cpuUsage_ ;
      /**
       * <code>required float cpuUsage = 4;</code>
       *
       * <pre>
       ** CPU usage 
       * </pre>
       */
      public boolean hasCpuUsage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float cpuUsage = 4;</code>
       *
       * <pre>
       ** CPU usage 
       * </pre>
       */
      public float getCpuUsage() {
        return cpuUsage_;
      }
      /**
       * <code>required float cpuUsage = 4;</code>
       *
       * <pre>
       ** CPU usage 
       * </pre>
       */
      public Builder setCpuUsage(float value) {
        bitField0_ |= 0x00000008;
        cpuUsage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float cpuUsage = 4;</code>
       *
       * <pre>
       ** CPU usage 
       * </pre>
       */
      public Builder clearCpuUsage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuUsage_ = 0F;
        onChanged();
        return this;
      }

      // required uint64 cpuTime = 5;
      private long cpuTime_ ;
      /**
       * <code>required uint64 cpuTime = 5;</code>
       *
       * <pre>
       ** CPU time 
       * </pre>
       */
      public boolean hasCpuTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint64 cpuTime = 5;</code>
       *
       * <pre>
       ** CPU time 
       * </pre>
       */
      public long getCpuTime() {
        return cpuTime_;
      }
      /**
       * <code>required uint64 cpuTime = 5;</code>
       *
       * <pre>
       ** CPU time 
       * </pre>
       */
      public Builder setCpuTime(long value) {
        bitField0_ |= 0x00000010;
        cpuTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 cpuTime = 5;</code>
       *
       * <pre>
       ** CPU time 
       * </pre>
       */
      public Builder clearCpuTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cpuTime_ = 0L;
        onChanged();
        return this;
      }

      // required uint32 priorityLevel = 6;
      private int priorityLevel_ ;
      /**
       * <code>required uint32 priorityLevel = 6;</code>
       *
       * <pre>
       ** priority from -20 to 20 
       * </pre>
       */
      public boolean hasPriorityLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 priorityLevel = 6;</code>
       *
       * <pre>
       ** priority from -20 to 20 
       * </pre>
       */
      public int getPriorityLevel() {
        return priorityLevel_;
      }
      /**
       * <code>required uint32 priorityLevel = 6;</code>
       *
       * <pre>
       ** priority from -20 to 20 
       * </pre>
       */
      public Builder setPriorityLevel(int value) {
        bitField0_ |= 0x00000020;
        priorityLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 priorityLevel = 6;</code>
       *
       * <pre>
       ** priority from -20 to 20 
       * </pre>
       */
      public Builder clearPriorityLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        priorityLevel_ = 0;
        onChanged();
        return this;
      }

      // required uint64 usedUserTime = 7;
      private long usedUserTime_ ;
      /**
       * <code>required uint64 usedUserTime = 7;</code>
       *
       * <pre>
       ** used user time (user mode) 
       * </pre>
       */
      public boolean hasUsedUserTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint64 usedUserTime = 7;</code>
       *
       * <pre>
       ** used user time (user mode) 
       * </pre>
       */
      public long getUsedUserTime() {
        return usedUserTime_;
      }
      /**
       * <code>required uint64 usedUserTime = 7;</code>
       *
       * <pre>
       ** used user time (user mode) 
       * </pre>
       */
      public Builder setUsedUserTime(long value) {
        bitField0_ |= 0x00000040;
        usedUserTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 usedUserTime = 7;</code>
       *
       * <pre>
       ** used user time (user mode) 
       * </pre>
       */
      public Builder clearUsedUserTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        usedUserTime_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 usedSystemTime = 8;
      private long usedSystemTime_ ;
      /**
       * <code>required uint64 usedSystemTime = 8;</code>
       *
       * <pre>
       ** used system time (kernel mode) 
       * </pre>
       */
      public boolean hasUsedSystemTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required uint64 usedSystemTime = 8;</code>
       *
       * <pre>
       ** used system time (kernel mode) 
       * </pre>
       */
      public long getUsedSystemTime() {
        return usedSystemTime_;
      }
      /**
       * <code>required uint64 usedSystemTime = 8;</code>
       *
       * <pre>
       ** used system time (kernel mode) 
       * </pre>
       */
      public Builder setUsedSystemTime(long value) {
        bitField0_ |= 0x00000080;
        usedSystemTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 usedSystemTime = 8;</code>
       *
       * <pre>
       ** used system time (kernel mode) 
       * </pre>
       */
      public Builder clearUsedSystemTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        usedSystemTime_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 rss = 9;
      private long rss_ ;
      /**
       * <code>required uint64 rss = 9;</code>
       *
       * <pre>
       **	 resident set size 
       * </pre>
       */
      public boolean hasRss() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint64 rss = 9;</code>
       *
       * <pre>
       **	 resident set size 
       * </pre>
       */
      public long getRss() {
        return rss_;
      }
      /**
       * <code>required uint64 rss = 9;</code>
       *
       * <pre>
       **	 resident set size 
       * </pre>
       */
      public Builder setRss(long value) {
        bitField0_ |= 0x00000100;
        rss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 rss = 9;</code>
       *
       * <pre>
       **	 resident set size 
       * </pre>
       */
      public Builder clearRss() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rss_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Profiling.core.processInfo)
    }

    static {
      defaultInstance = new processInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Profiling.core.processInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021processInfo.proto\022(ets.genielog.appwat" +
      "cher_3.profiling.core\"\252\001\n\013processInfo\022\014\n" +
      "\004name\030\001 \002(\t\022\013\n\003uid\030\002 \002(\r\022\013\n\003pid\030\003 \002(\r\022\020\n" +
      "\010cpuUsage\030\004 \002(\002\022\017\n\007cpuTime\030\005 \002(\004\022\025\n\rprio" +
      "rityLevel\030\006 \002(\r\022\024\n\014usedUserTime\030\007 \002(\004\022\026\n" +
      "\016usedSystemTime\030\010 \002(\004\022\013\n\003rss\030\t \002(\004"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ets_genielog_appwatcher_3_profiling_core_processInfo_descriptor,
              new java.lang.String[] { "Name", "Uid", "Pid", "CpuUsage", "CpuTime", "PriorityLevel", "UsedUserTime", "UsedSystemTime", "Rss", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
